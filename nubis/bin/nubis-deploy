#!/bin/bash

# Consume user-data
eval `curl -fqs http://169.254.169.254/latest/user-data`

if [ "$ami" = "" ]; then
  ami=`cat artifacts/amis.txt | grep $region | cut -d: -f2`
fi

echo "Deploying AMI $ami into $environment/$region"

CF_TEMPLATE=$WORKSPACE/artifacts/main.json
PLAYBOOK=$WORKSPACE/../ansible.yaml
VARIABLES=$WORKSPACE/../vars.yaml

TF_VARIABLES=$WORKSPACE/../override.tfvars
TF_MAIN=$WORKSPACE/../main.tf

FULL_STACK_NAME=$stack_name-$environment

if [ -f $CF_TEMPLATE ]; then

echo "Running Terraform"

# Fake out Terraform, in the case where we didn't create this stack initially
if [ ! -f terraform.tfstate ]; then
  cat <<EOF > terraform.tfstate
{
  "version": 1,
  "serial": 1,
  "modules": [
    {
      "path": [
        "root"
      ],
      "resources": {
        "aws_cloudformation_stack.deploy": {
          "type": "aws_cloudformation_stack",
          "primary": {
            "id": "$FULL_STACK_NAME",
            "attributes": {
              "name": "$FULL_STACK_NAME"
            }
          }
        }
      }
    }
  ]
}
EOF
fi

terraform plan \
  -var region=$region \
  -var env=$environment \
  -var template=$CF_TEMPLATE \
  -var owner=$owner \
  -var service_name=$service_name \
  -var stack_name=$FULL_STACK_NAME \
  -var ami=$ami \
  -var-file=$TF_VARIABLES \
  $WORKSPACE/..

echo "Running CloudFormation"
ansible-playbook -i localhost, \
  $PLAYBOOK \
  -e stack_name=$FULL_STACK_NAME \
  -e owner=$owner \
  -e service_name=$service_name \
  -e key_name=$key_name \
  -e region=$region \
  -e env=$environment \
  -e ami=$ami \
  -e template=$CF_TEMPLATE \
  -e @$VARIABLES

export CONSUL_ENDPOINT
CONSUL_ENDPOINT="public.consul.$environment.$region.$NUBIS_ACCOUNT.$NUBIS_DOMAIN"

echo "Injecting into Consul"
PROJECT_NAME=$service_name NUBIS_ENVIRONMENT=$environment nubis-consul --quiet --region $region --stack-name $FULL_STACK_NAME get-and-update

## XXX: Needs to move to its own tool
## XXX: limit to nubis/proxy for the time being
if [ -d nubis/proxy ]; then
  CONFIG_INJECT=proxy
  INJECT_PREFIX="nubis-$CONFIG_INJECT-$environment/$environment/config"

  echo "Injecting $CONFIG_INJECT rules into $INJECT_PREFIX"

  # Make sure the container config/ key is present
  curl --insecure -qfs -X PUT "https://$CONSUL_ENDPOINT/v1/kv/$INJECT_PREFIX/" >/dev/null

  for r in $(find nubis/$CONFIG_INJECT/ -type f | grep -v \.md | cut -d/ -f3); do
    echo -n "$r "
    curl --insecure -qfs -X PUT -d "@nubis/$CONFIG_INJECT/$r" "https://$CONSUL_ENDPOINT/v1/kv/$INJECT_PREFIX/$r"
    echo
  done
fi

fi
